<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <!--annotation-config : Annotation config main job is to activate all the annotations that are present in java
    beans and those are already registered either by defining in your application context file or being registered while
    component scanning. Important point is they need to be registered.-->

    <!--component-scan : Component scan can do everything that annotation config does , in addition to it it also
    registers the java classes as spring bean those are annotated with @Component , @Service ,@Repository etc.-->

    <context:component-scan base-package="com.dmslob.spring.core"/>

    <context:property-placeholder location="classpath:application.properties" />

    <bean id="Event" class="com.dmslob.spring.core.context.Event" scope="prototype">
        <constructor-arg value="Event title"/>
    </bean>

    <!--method replacement beans-->
    <bean id="car" class="com.dmslob.spring.core.methodreplacement.Car">
        <replaced-method name="breaks" replacer="newBreak" />
    </bean>

    <!--method injection beans-->
    <bean id="abstractLookupBean" class="com.dmslob.spring.core.methodinjection.AbstractLookupDemoBean">
        <lookup-method name="getMyHelper" bean="myHelper"/>
    </bean>

    <bean id="standardLookupBean" class="com.dmslob.spring.core.methodinjection.StandardLookupDemoBean">
        <property name="myHelper">
            <ref bean="myHelper"/>
        </property>
    </bean>

</beans>